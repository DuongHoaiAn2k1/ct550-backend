version: '3.8'

services:
  app:
    container_name: ct550-app
    restart: unless-stopped
    build:
      context: docker/php
      args:
        _UID: ${_UID:-1000}
        _GID: ${_GID:-1000}
    user: ${_UID}:${_GID}
    volumes:
      - ./:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    # extra_hosts:
    #   - host.docker.internal:host-gateway
    networks:
      - network-app
    environment: 
      - DB_HOST=mysql
      - REDIS_HOST=redis

  mysql:
    build:
      context: docker/mysql
      dockerfile: Mysql.Dockerfile
    volumes:
      # - ./docker/mysql/conf.d:/etc/mysql/conf.d
      - db-store:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ct550_db
      MYSQL_USER: ct550_user
      MYSQL_PASSWORD: ct550
    networks:
      - network-app

  nginx:
    container_name: nginx-service
    restart: unless-stopped
    image: nginx:latest
    volumes:
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./storage:/var/www/storage
    ports:
      - 9001:80
      - 443:443
    networks:
      - network-app
    depends_on:
      - app

  phpmyadmin: 
    platform: linux/x86_64 
    image: phpmyadmin/phpmyadmin 
    container_name: phpmyadmin 
    depends_on: 
      - mysql 
    ports: 
      - 91:80 
    environment: 
      PMA_PORT: 3306 
      PMA_HOST: mysql 
    networks: 
      - network-app
  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - network-app

volumes:
  db-store:
  redis-data:

networks:
  network-app:
    driver: bridge
